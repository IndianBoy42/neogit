*neogit.txt* A Magit clone for Neovim that is geared towards the Vim philosophy. 
*neogit*
Author: TimUntersberger
License: MIT license {{{

  Copyright (c) 2020 Karl Yngve Lervåg

  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to
  deal in the Software without restriction, including without limitation the
  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
  sell copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
  IN THE SOFTWARE.
}}}

==============================================================================
CONTENTS                                        *neogit-contents*

    1. Intro                         |neogit-intro|
    2. Commands                      |neogit-commands|
    3. Mappings                      |neogit-mappings|
    4. Highlights                    |neogit-highlights|
    5. API                           |neogit-api|
    6. Popups                        |neogit-popups|


==============================================================================
1. Intro                                        *neogit-intro*

Neogit is a magit clone for Neovim that is currently work in progress.

==============================================================================
2. Commands                                     *neogit-commands*

                                                *:Neogit*
:Neogit                 In a Git repository, opens a new NeogitStatus tab.

                                                *:NeogitMessages*
:NeogitMessages         Prints messages from neogit's messaging system.

                                                *:NeogitResetState*
:NeogitResetState       Performs a full reset of saved flags for all popups.

==============================================================================
3. Mappings                                      *neogit-mappings*

                                                *neogit-staging-maps*
Staging/unstaging maps ~

                                                *neogit_s*
s                       Stage (also supports staging selection/hunk)

                                                *neogit_S*
S                       Stage unstaged changes

                                                *neogit_<C-s>*
<C-s>                   Stage Everything

                                                *neogit_u*
u                       Unstage (also supports unstaging selection/hunk)

                                                *neogit_U*
U                       Unstage staged changes

                                                *neogit_x*
x                       Discard changes (also supports discarding hunks)

                                                *neogit_<cr>*
<cr>                    Goto item at cursor

                                                *neogit_d*
Diff maps ~
                                                *neogit_<tab>*
<tab>                   Toggle diff


                                                *neogit-commit-maps*
Commit maps ~

<C-C><C-C>              Commit (when writing a commit message)

                                                *neogit-misc-maps*
Miscellaneous maps ~
                                                *neogit_$*
$                       Command History

                                                *neogit_fold*
1, 2, 3, 4              Set a foldlevel

                                                *neogit_<C-r>*
<C-r>                   Refresh Buffer

                                                *neogit_{*
{                       Goto previous hunk

                                                *neogit_}*
}                       Goto next hunk

                                                *neogit_L*
L                       Open log popup

                                                *neogit_p*
p                       Open pull popup

                                                *neogit_P*
P                       Open push popup

                                                *neogit_f*
f                       Open fetch popup

                                                *neogit_X*
X                       Open reset popup

                                                *neogit_A*
A                       Open cherry-pick popup

                                                *neogit_m*
m                       Open merge popup

                                                *neogit__*
_                       Open revert popup

                                                *neogit_M*
M                       Open remotes popup

                                                *neogit_?*
?                       Open help popup

                                                *neogit_b*
b                       Open branch popup

                                                *neogit_c*
c                       Open commit popup

                                                *neogit_r*
r                       Open rebase popup

                                                *neogit_Z*
Z                       Open stash popup
==============================================================================
4. Highlights                                    *neogit-highlights*

==============================================================================
5. Lua API                                            *neogit-api* *neogit-lua*

neogit.open({*opts})                                         *neogit.open()*
    Open Neogit. Alternative to `:Neogit` >lua
        local neogit = require('neogit')

        -- open using defaults
        neogit.open()

        -- open commit popup
        neogit.open({ "commit" })

        -- open with split kind
        neogit.open({ kind = "split" })

        -- open home directory
        neogit.open({ cwd = "~" })
<
    Parameters:
      • {opts}  (table|nil)
                • kind (string) optional: How to open Neogit.
                    - "tab" (default) like :tab split
                    - "replace"       like :enew
                    - "split"         like :below split
                    - "split_above"   like :top split
                    - "vsplit"        like :vsplit
                    - "floating" not-yet-implemented

                • cwd (string) optional: Path to git repository.
                  default: |current-directory|.
                • no_expand (boolean) optional: Set to true to
                  prevent the calling of `expand()` on the path.

                • [1] (string) optional: Name of the Neogit
                  popup to open. See |neogit-popups|.


==============================================================================
6. Popups                                          *neogit-popups*

A Neogit popup is a client interface over a git subcommand or other
git mechanism.

                                                    *neogit-branch*
"branch"             see :Man git-branch
                                                    *neogit-branch_config*
"branch_config"
                                                    *neogit-cherry_pick*
"cherry_pick"        see :Man git-cherry-pick
                                                    *neogit-commit*
"commit"             see :Man git-commit
                                                    *neogit-diff*
"diff"               see :Man git-diff
                                                    *neogit-echo*
"echo"               see :Man git-echo
                                                    *neogit-fetch*
"fetch"              see :Man git-fetch
                                                    *neogit-help*
"help"               see :Man git-help
                                                    *neogit-log*
"log"                see :Man git-log
                                                    *neogit-merge*
"merge"              see :Man git-merge
                                                    *neogit-pull*
"pull"               see :Man git-pull
                                                    *neogit-push*
"push"               see :Man git-push
                                                    *neogit-rebase*
"rebase"             see :Man git-rebase
                                                    *neogit-remote*
"remote"             see :Man git-remote
                                                    *neogit-remote_config*
"remote_config"
                                                    *neogit-reset*
"reset"              see :Man git-reset
                                                    *neogit-revert*
"revert"             see :Man git-revert
                                                    *neogit-stash*
"stash"              see :Man git-stash

 vim:tw=78:ts=8:ft=help
